#!/usr/bin/env python3


import rclpy
from rclpy.node import Node

from geometry_msgs.msg import Quaternion


class PanTiltCam(Node):
    '''
    Control node for nodebot1's camera.

    '''
    def __init__(self):
        super().__init__('pan_tilt_cam')
        # subscription for cmd_vel in namespace of nodebot1
        self.subscription = self.create_subscription(
            Quaternion,
            '/local/cmd_cam',
            self.listener_callback,
            10)

        self.subscription  # prevent unused variable warning


    def listener_callback(self, msg):
        self.get_logger().debug('/local/cmd_cam: "%s"' % msg)
        print(msg)



def main(args=None):
    rclpy.init(args=args)

    pan_tilt_cam = PanTiltCam()

    rclpy.spin(pan_tilt_cam)

    # Destroy the node explicitly
    # (optional - otherwise it will be done automatically
    # when the garbage collector destroys the node object)
    pan_tilt_cam.destroy_node()
    rclpy.shutdown()



if __name__ == '__main__':
    main()
